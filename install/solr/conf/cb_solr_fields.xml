<!-- Valid attributes for fields:
 name: mandatory - the name for the field
 type: mandatory - the name of a previously defined type from the
	 <types> section
 indexed: true if this field should be indexed (searchable or sortable)
 stored: true if this field should be retrievable
 compressed: [false] if this field should be stored using gzip compression
	 (this will only apply if the field type is compressable; among
	 the standard field types, only TextField and StrField are)
 multiValued: true if this field may contain multiple values per document
 omitNorms: (expert) set to true to omit the norms associated with
	 this field (this disables length normalization and index-time
	 boosting for the field, and saves some memory).  Only full-text
	 fields or fields that need an index-time boost need norms.
 termVectors: [false] set to true to store the term vector for a
	 given field.
	 When using MoreLikeThis, fields used for similarity should be
	 stored for best performance.
 termPositions: Store position information with the term vector.
	 This will increase storage costs.
 termOffsets: Store offset information with the term vector. This
	 will increase storage costs.
 default: a value that should be used if no value is specified
	 when adding a document.
-->


<!-- id: tree nodes unique identifier field (from tree table) -->
<field name="id" 	type="tlong"		indexed="true" stored="true" required="true" />
<!-- pid: primary node id -->
<field name="pid"     	type="tlong"  		indexed="true" stored="true" />
<!-- pids: multivalued field with all upward parent ids of this node -->
<field name="pids"    	type="tlong"  		indexed="true" stored="true" multiValued="true" />
<!-- path: node full text path (/Home/Documents/FOlder1/action5). Used for display purposes -->
<field name="path"    	type="text_general" 	indexed="true" stored="true" />
<!-- name: node name -->
<field name="name"    	type="text_general" 	indexed="true" stored="true" />
<!-- system: field for delimiting system folders (for system this field value is 1). System folders cannot be deleted by user -->
<field name="system"  	type="tint"  		indexed="true" stored="true" />
<!-- type: node type
	1. Folder
	2. Link
	3. Case
	4. Case object
	5. File
	6. Task
	7. Event
	8. Message (Email)
	This definition can be updated when needed
 -->
<field name="type"    	type="tint"  		indexed="true" stored="true" />
<!-- subtype: this field is dependent on type field value
	for field "type" = 1 (Folder) there are defined following values for subtype:
		1 - query. This type will be probably replaced by controller property in cfg field
		2 – My Casebox (users home folder)
		3 – My documents (users My Docuemnts folder)
		4 .. 8 - have been removed and are not used now
		9 – Tag folder. Autocreated folders that were specified in tags administration for cases system folders.
		10 - Public case folder. It’ll be created by system for any case.

	for field "type" = 4 (Case object)  this field uses already defined types from templates structure (1-case object, 2-in action, 3-out action, 4-case template)

	for other values in field "type" his field (subtype) is not used for now

	This definition can be updated when needed
 -->
<field name="subtype" 	type="tint"  		indexed="true" stored="true" />
<!-- size: used for file sizes  -->
<field name="size"    	type="tlong" 		indexed="true" stored="true" />
<!-- date: date field for all objects  -->
<field name="date"	type="tdate"  		indexed="true" stored="true" />
<!-- date_end: used for objects that have an end date (tasks)  -->
<field name="date_end"	type="tdate" 		indexed="true" stored="true" />

<!-- oid: owner id. Owners have full access to their objects despite other security rules -->
<field name="oid" 	type="tint"		indexed="true" stored="true" />
<!-- cid: creator id. User that created / uploaded this object  -->
<field name="cid" 	type="tint"		indexed="true" stored="true" />
<!-- cdate: creation date  -->
<field name="cdate" 	type="tdate" 		indexed="true" stored="true" />
<!-- uid: updater id. Last user id that have updated this object  -->
<field name="uid" 	type="tint"		indexed="true" stored="true" />
<!-- udate: last update date  -->
<field name="udate"	type="tdate"		indexed="true" stored="true" />
<!-- did: deleter id. User id that have deleted this node  -->
<field name="did" 	type="tint"		indexed="true" stored="true" />
<!-- ddate: delete date  -->
<field name="ddate"	type="tdate"		indexed="true" stored="true" />
<!-- dstatus: indicates delete status of node
	0 - not deleted
	1 - deleted
	2 - deleted due to dependancy (for childs of deleted objects)
  -->
<field name="dstatus"	type="tint"		indexed="true" stored="true" required="true" />

<!-- case_id: indicates the id of the case if this node is in a case  -->
<field name="case_id"		type="tint" 		indexed="true" stored="true" />
<!-- case: case name. Stored for display purposes  -->
<field name="case"		type="text_general" 	indexed="true" stored="true" />
<!-- template_id: the themplate id of the object  -->
<field name="template_id"	type="tint" 		indexed="true" stored="true" />

<!-- template_type: case, object, file, task, email -->
<field name="template_type"    	type="string"  		indexed="true" stored="true" />

<!-- security_set_id: security set id -->
<field name="security_set_id"	type="tint" 		indexed="true" stored="true" />


<!-- TASKS SPECIFIC FIELDS -->

<!-- user_ids: this field is used now for assigned users in tasks  -->
<field name="user_ids"    	type="tint" 		indexed="true" stored="true" multiValued="true" />
<!-- status: the tasks status (1 Overdue, 2 Active, 3 Completed, 4 Pending)
	can also be used, when needed, for other objects to specify their status -->
<field name="status"  		type="tint"	indexed="true" stored="true" />
<!-- category_id: tasks category (a thesaury defined set of values) -->
<field name="category_id"	type="tint"	indexed="true" stored="true"/>
<!-- importance: tasks importance (1  low, 2 medium, 3 high) -->
<field name="importance"	type="tint"	indexed="true" stored="true"/>
<!-- ccompleted: completed date of the task. It can be completed automaticly (when all reponsible users mark the task as completed ) or the owner can close it manually   -->
<field name="completed" 	type="tdate" 		indexed="true" stored="true" />

<!-- END OF TASKS SPECIFIC FIELDS -->


<!-- versions: versions count. Used for files -->
<field name="versions"		type="tint"	indexed="true" stored="true"/>

<!-- sys_tags: system tags specified for the object -->
<field name="sys_tags" 		type="int"	indexed="true" stored="true" multiValued="true" />
<!-- tree_tags: tags specified for object, that are actually also elements of the tree (not elements from thesauri)  -->
<field name="tree_tags" 	type="int"	indexed="true" stored="true" multiValued="true" />
<!-- user_tags: user defined tags specified for the object -->
<field name="user_tags" 	type="int"	indexed="true" stored="true" multiValued="true" />


<!-- metas: designed to contain metadata of the object for searching by medatada properties. Not used for now -->
<field name="metas" 		type="text_ws"		indexed="true" stored="true" />
<!-- content: content of the objects for searching by content (including parsed files content). -->
<field name="content"		type="text_general"	indexed="true" 	stored="true" />
<!-- ntsc: node type sort coolumn. Used to sort Folders firstly -->
<field name="ntsc"    		type="tint"		indexed="true" stored="true" />
<!-- sort_name: designed to sort by name -->
<field name="sort_name" 	type="text_general_sort" indexed="true" stored="true" />
<!-- sort_path: designed to sort by path -->
<field name="sort_path" 	type="text_general_sort" indexed="true" stored="true" />

<!-- role_ids: these columns can be used by object templates to store specific values and later to be able to filter or search by them.
	For example: in case_card template there can be fields that define Managers, Lawyers, Helpers for a case.
	For these fields, in db.templates_structure we specify the value for column "solr_column_name" = 'role_ids1' / 'role_ids2' etc.
	So specified values for these kind of fields will be joined together per solr_column_name. This means we can have many and different objects in a case that can define role_ids.
	The result set for role_ids is specified for absolutely all objects in a case.
 -->
<field name="role_ids1" 	type="tint" 	indexed="true" stored="true" multiValued="true" />
<field name="role_ids2" 	type="tint" 	indexed="true" stored="true" multiValued="true" />
<field name="role_ids3" 	type="tint" 	indexed="true" stored="true" multiValued="true" />
<field name="role_ids4" 	type="tint" 	indexed="true" stored="true" multiValued="true" />
<field name="role_ids5" 	type="tint" 	indexed="true" stored="true" multiValued="true" />
<field name="_version_" 	type="tlong" 	indexed="true" stored="true" multiValued="false" />